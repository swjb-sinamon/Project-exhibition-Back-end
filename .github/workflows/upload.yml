name: sinamon-Project-exhibition
on:
  workflow_dispatch:
  push:
    branches:
      - master

# jobs:
#   deploy-production:
#     runs-on: ubuntu-18.04
# #     strategy:
# #       matrix:
# #         node-version: [16.x]
# #         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - name: üöö Get latest code
#       uses: actions/checkout@v2

#     - name: Use Node.js 16
#       uses: actions/setup-node@v2
#       with:
#         node-version: '16'
      
#     - name: üî® Build Project
#       run: |
#         npm install
    
#     - name: üìÇ Sync files
#       uses: SamKirkland/FTP-Deploy-Action@4.0.0
#       with:
#         server: ${{ secrets.FTP_HOST_PRODUCTION }}
#         username: ${{ secrets.FTP_USERNAME_PRODUCTION }}
#         password: ${{ secrets.FTP_PASSWORD_PRODUCTION }}
# #         local-dir: ./webtoon/
#         exclude: |
#           **/.git*
#           **/.git*/**
#           **/node_modules/**
#         port: 2020
# #       - uses: actions/checkout@v3
# #       - name: Use Node.js ${{ matrix.node-version }}
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: ${{ matrix.node-version }}
# #           cache: "npm"

    
# #       - name: Install modules
# #         run: npm install 

# #     - name: Deploy
# #         uses: SamKirkland/FTP-Deploy-Action@4.0.0
# #         with:
# #           ftp-server: ${{ secrets.FTP_HOST_PRODUCTION }}
# #           ftp-username: ${{ secrets.FTP_USERNAME_PRODUCTION }}
# #           ftp-password: ${{ secrets.FTP_PASSWORD_PRODUCTION }}
# #           local-dir: ./home/webtoon/webtoon/


jobs:
  deploy-production:
    runs-on: ubuntu-18.04
#     steps:
#       - name: Checkout source code.
#         uses: actions/checkout@master

#       - name: Cache node modules
#         uses: actions/cache@v1
#         with:
#           path: node_modules
#           key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.OS }}-build-
#             ${{ runner.OS }}-
#       - name: Install
#         run: npm install
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.FTP_HOST_PRODUCTION }}
          username: ${{ secrets.FTP_USERNAME_PRODUCTION }}
          key: ${{ secrets.KEY }}
#           key: ${{ secrets.REMOTE_SSH_KEY }}
          port: 2020
          script: |
            cd /home/ubuntu/ezhome
            sudo git pull
            sudo npm install
            pm2 reload all
#       - uses: actions/checkout@master
#       - name: copy file via ssh password
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.FTP_HOST_PRODUCTION }}
#           username: ${{ secrets.FTP_USERNAME_PRODUCTION }}
#           password: ${{ secrets.FTP_PASSWORD_PRODUCTION }}
#           port: 2020
#           source: ""
#           target: ""


#       - name: Deploy
#         uses: SamKirkland/FTP-Deploy-Action@4.0.0
#         with:
#           server: ${{ secrets.FTP_HOST_PRODUCTION }}
#           username: ${{ secrets.FTP_USERNAME_PRODUCTION }}
#           password: ${{ secrets.FTP_PASSWORD_PRODUCTION }}
#           exclude: |
#             **/.git*
#             **/.git*/**
#             **/node_modules/**
#           local-dir: ./webtoon/
#           git-ftp-args: --insecure


#       - name: Discord Alert Success
#         uses: sarisia/actions-status-discord@v1
#         if: success()
#         with:
#           webhook: ${{ secrets.DISCORD_WEBHOOK }}
#           description: "üöÄ ÏàòÏ†ïÍ≥ºÍ∞Ä Î∞∞Ìè¨ÎêòÏóàÏäµÎãàÎã§! https://snm.itsw.info"

#       - name: Discord Alert Failure
#         uses: sarisia/actions-status-discord@v1
#         if: failure()
#         with:
#           webhook: ${{ secrets.DISCORD_WEBHOOK }}
#           description: "üî• ÏàòÏ†ïÍ≥º Î∞∞Ìè¨Î•º Ïã§Ìå®ÌïòÏòÄÏäµÎãàÎã§."
